import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

plugins {
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'findbugs'
    id 'scala'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

defaultTasks 'clean', 'test'

group = 'io.api'
version = '0.1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

applicationName = 'wiser-github-stats'
mainClassName = 'io.wiser.Service'
archivesBaseName = applicationName

ext {
    playVersion = '2.5.15'
    findBugsVersion = '3.0.1'
}

repositories {
    jcenter()

    mavenCentral()

    maven {
        url file("$rootProject.projectDir/lib")
    }
}

dependencies {
    compile group: 'com.typesafe.play', name: 'play-java_2.11', version: playVersion
    compile group: 'com.typesafe.play', name: 'play-logback_2.11', version: playVersion
    compile group: 'com.typesafe.play', name: 'play-netty-server_2.11', version: playVersion
    compile group: 'com.typesafe.play', name: 'play-jdbc-evolutions_2.11', version: playVersion
    compile group: 'com.typesafe.play', name: 'play-java-jdbc_2.11', version: playVersion
    compile group: 'com.typesafe.play', name: 'play-java-ws_2.11', version: playVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.7.6'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-guice', version: '2.7.6'
    compile group: 'org.joda', name: 'joda-money', 'version': '0.12'
    compile(group: 'io.dropwizard', name: 'dropwizard-jdbi', version: '1.1.0') {
        exclude module: 'dropwizard-db'
        exclude module: 'metrics-jdbi'
    }
    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.5.2'

    testCompile group: 'com.typesafe.play', name: 'play-test_2.11', version: playVersion
    testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.11', version: '2.5.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit-fluent', version: '1.25.0'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.2.21'
    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '2.2.1'
    testCompile group: 'com.google.code.findbugs', name: 'annotations', version: findBugsVersion

    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    runtime group: 'mysql', name: 'mysql-connector-java', version: '5.1.41'
    runtime group: 'org.glassfish.web', name: 'javax.el', version: '2.2.6'
}

checkstyle {
    toolVersion = '7.8.1'
    configFile = file("$rootProject.projectDir/checkstyle.xml")
    sourceSets = [sourceSets.main, sourceSets.test]
}

pmd {
    toolVersion = '5.7.0'
    sourceSets = [sourceSets.main, sourceSets.test]
}

findbugs {
    toolVersion = findBugsVersion
    sourceSets = [sourceSets.main, sourceSets.test]
    excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(org.gradle.api.tasks.testing.Test) {
    maxParallelForks = Runtime.runtime.availableProcessors()
    // https://docs.gradle.org/3.4.1/dsl/org.gradle.api.tasks.testing.Test.html
    forkEvery = project.hasProperty("test.forkEvery") ? project.getProperty("test.forkEvery") as Integer : 0;
}

shadowJar {
    classifier = null
    mergeServiceFiles()
    append 'reference.conf'
    append 'application.conf'
    dependsOn check
}
